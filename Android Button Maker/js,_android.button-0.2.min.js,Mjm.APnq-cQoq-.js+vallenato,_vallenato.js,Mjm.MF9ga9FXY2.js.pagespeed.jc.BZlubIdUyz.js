$(function() {
	function d() {
		$("#preview").val(b.btn_text);
		$("#preview").css({
			"font-size": b.btn_textsize + "px"
		});
		$("#preview").css({
			color: "#" + b.btn_textcolor
		});
		b.isshadow ? $("#preview").css({
			"text-shadow": b.btn_shadowdx + "px " + b.btn_shadowdy + "px " + b.btn_shadowradius + "px #" + b.btn_shadowcolor
		}) : $("#preview").css({
			"text-shadow": "none"
		});
		f()
	}

	function c(b) {
		var g = /gradient_/,
			c = /padding_/,
			d = /size_/,
			e = /stroke_/,
			h = /solid_/;
		/corners_/.test(b) ? !0 == a.isradius ? ($("#preview").css({
			"border-top-left-radius": a.corners_topleftradius + "px"
		}), $("#preview").css({
			"border-top-right-radius": a.corners_toprightradius + "px"
		}), $("#preview").css({
			"border-bottom-left-radius": a.corners_bottomleftradius + "px"
		}), $("#preview").css({
			"border-bottom-right-radius": a.corners_bottomrightradius + "px"
		})) : $("#preview").css({
			"border-radius": a.corners_radius + "px"
		}) : g.test(b) ? "gradient" == a.bgtype ? (type = $("#gradient_type").val(), "linear" == type ? (deg = 180 - (parseInt(a.gradient_angle) + 90), a.iscenter ? $("#preview").css({
			background: " linear-gradient(" + deg + "deg, #" + a.gradient_startcolor + " 0%, #" + a.gradient_centercolor + " " + a.gradient_centerx + "%, #" + a.gradient_endcolor + " 100%)"
		}) : $("#preview").css({
			background: " linear-gradient(" + deg + "deg, #" + a.gradient_startcolor + " 0%, #" + a.gradient_endcolor + " 100%)"
		})) : "radial" == type && (a.iscenter ? (midcolpos = a.gradient_gradientradius / 2, k = "radial-gradient(circle farthest-corner at " + a.gradient_centerx + "% " + a.gradient_centery + "%, #" + a.gradient_startcolor + " 0px, #" + a.gradient_centercolor + " " + midcolpos + "px, #" + a.gradient_endcolor + " " + a.gradient_gradientradius + "px) repeat scroll 0 0 transparent") : k = "radial-gradient(circle farthest-corner at " + a.gradient_centerx + "% " + a.gradient_centery + "%, #" + a.gradient_startcolor + " 0px, #" + a.gradient_endcolor + " " + a.gradient_gradientradius + "px) repeat scroll 0 0 transparent", $("#preview").css({
			background: k
		}))) : $("#preview").css({
			background: "#" + a.solid_color
		}) : h.test(b) ? $("#preview").css({
			"background-color": "#" + a.solid_color
		}) : c.test(b) ? a.ispadding ? $("#preview").css({
			padding: a.padding_top + "px " + a.padding_right + "px " + a.padding_bottom + "px " + a.padding_left + "px"
		}) : $("#preview").css({
			padding: ""
		}) : d.test(b) ? ($("#preview").css({
			width: a.size_width + "px"
		}), $("#preview").css({
			height: a.size_height + "px"
		})) : e.test(b) && $("#preview").css({
			border: a.stroke_width + "px solid #" + a.stroke_color
		});
		f()
	}

	function f() {
		shadow_code = "";
		b.isshadow && (shadow_code = '<div> <span class="r">android:shadowColor</span>=<span class="b">"#' + b.btn_shadowcolor + '"</span> </div> <div> <span class="r">android:shadowDx</span>=<span class="b">"' + b.btn_shadowdx + '"</span> </div> <div> <span class="r">android:shadowDy</span>=<span class="b">"' + b.btn_shadowdy + '"</span> </div> <div> <span class="r">android:shadowRadius</span>=<span class="b">"' + b.btn_shadowradius + '"</span> </div> ');
		btn_code = '<span class="g">&lt;Button</span> <div class="code-shape"> <div> <span class="r">android:id</span>=<span class="b">"' + b.btn_id + '"</span> </div> <br/> <div> <span class="r">android:text</span>=<span class="b">"' + b.btn_text + '"</span> </div> <div> <span class="r">android:textColor</span>=<span class="b">"#' + b.btn_textcolor + '"</span> </div> <div> <span class="r">android:textSize</span>=<span class="b">"' + b.btn_textsize + 'sp"</span> </div> <br/> <div> <span class="r">android:layout_width</span>=<span class="b">"' + a.size_width + 'dp"</span> </div> <div><span class="r"> android:layout_height</span>=<span class="b">"' + a.size_height + 'dp"</span> </div> <div> <span class="r">android:background</span>=<span class="b">"' + b.btn_background + '"</span> </div> ' + shadow_code + ' </div><span class="g">/&gt;</span>';
		corner_code = "";
		corner_code = a.isradius ? corner_code + ('<div><div>&lt;corners <div>android:topLeftRadius="' + a.corners_topleftradius + 'dp"</div> <div> android:topRightRadius="' + a.corners_toprightradius + 'dp" </div> <div> android:bottomLeftRadius="' + a.corners_bottomleftradius + 'dp" </div> <div> android:bottomRightRadius="' + a.corners_bottomrightradius + 'dp" </div> /&gt; </div></div>') : corner_code + ('<div><div><span class="g">&lt;corners</span> <div> <span class="r">android:radius</span>=<span class="b">"' + a.corners_radius + 'dp"</span> </div> <span class="g">/&gt;</span> </div></div>');
		"gradient" == a.bgtype ? "linear" == a.gradient_type ? bg_code = a.iscenter ? '<div><div><span class="g">&lt;gradient</span> <div><span class="r">android:angle</span>=<span class="b">"' + a.gradient_angle + '"</span></div><div><span class="r">android:centerX</span>=<span class="b">"' + a.gradient_centerx + '%"</span></div> <div><span class="r">android:centerColor</span>=<span class="b">"#' + a.gradient_centercolor + '"</span></div><div><span class="r">android:startColor</span>=<span class="b">"#' + a.gradient_startcolor + '"</span></div><div><span class="r">android:endColor</span>=<span class="b">"#' + a.gradient_endcolor + '"</span></div><div><span class="r">android:type</span>=<span class="b">"linear"</span></div><span class="g">/&gt;</span></div></div>' : '<div><div><span class="g">&lt;gradient</span> <div><span class="r">android:angle</span>=<span class="b">"' + a.gradient_angle + '"</span></div> <div><span class="r">android:startColor</span>=<span class="b">"#' + a.gradient_startcolor + '"</span></div> <div><span class="r">android:endColor</span>=<span class="b">"#' + a.gradient_endcolor + '"</span></div> <div><span class="r">android:type</span>=<span class="b">"linear"</span></div> <span class="g">/&gt;</span></div> </div>' : "radial" == a.gradient_type && (bg_code = a.iscenter ? '<div><div><span class="g">&lt;gradient</span> <div><span class="r">android:gradientRadius</span>=<span class="b">"' + a.gradient_gradientradius + '"</span></div><div><span class="r">android:centerX</span>=<span class="b">"' + a.gradient_centerx + '%"</span></div><div><span class="r">android:centerY</span>=<span class="b">"' + a.gradient_centery + '%"</span></div> <div><span class="r">android:centerColor</span>=<span class="b">"#' + a.gradient_centercolor + '"</span></div><div><span class="r">android:startColor</span>=<span class="b">"#' + a.gradient_startcolor + '"</span></div><div><span class="r">android:endColor</span>=<span class="b">"#' + a.gradient_endcolor + '"</span></div><div><span class="r">android:type</span>=<span class="b">"radial"</span></div><span class="g">/&gt;</span></div></div>' : '<div><div><span class="g">&lt;gradient</span> <div><span class="r">android:gradientRadius</span>=<span class="b">"' + a.gradient_gradientradius + '"</span></div><div><span class="r">android:centerX</span>=<span class="b">"' + a.gradient_centerx + '%"</span></div><div><span class="r">android:centerY</span>=<span class="b">"' + a.gradient_centery + '%"</span></div> <div><span class="r">android:startColor</span>=<span class="b">"#' + a.gradient_startcolor + '"</span></div><div><span class="r">android:endColor</span>=<span class="b">"#' + a.gradient_endcolor + '"</span></div><div><span class="r">android:type</span>=<span class="b">"radial"</span></div><span class="g">/&gt;</span></div></div>') : bg_code = '<div><div><span class="g">&lt;solid</span><div><span class="r">android:color</span>=<span class="b">"#' + a.solid_color + '"</span></div> <span class="g">/&gt;</span></div></div>';
		pad_code = "";
		a.ispadding && (pad_code = '<div> <div><span class="g">&lt;padding</span> <div><span class="r">android:left</span>=<span class="b">"' + a.padding_left + 'dp"</span></div> <div><span class="r">android:top</span>=<span class="b">"' + a.padding_top + 'dp"</span></div> <div><span class="r">android:right</span>=<span class="b">"' + a.padding_right + 'dp"</span></div> <div><span class="r">android:bottom</span>=<span class="b">"' + a.padding_bottom + 'dp"</span></div> <span class="g">/&gt;</span></div> </div>');
		siz_code = '<div> <div><span class="g">&lt;size</span> <div><span class="r">android:width</span>=<span class="b">"' + a.size_width + 'dp"</span></div><div><span class="r">android:height</span>=<span class="b">"' + a.size_height + 'dp"</span></div> <span class="g">/&gt;</span></div> </div>';
		strok_code = "";
		0 < a.stroke_width && (strok_code = '<div> <div><span class="g">&lt;stroke</span> <div><span class="r">android:width</span>=<span class="b">"' + a.stroke_width + 'dp"</span></div> <div><span class="r">android:color</span>=<span class="b">"#' + a.stroke_color + '"</span></div> <span class="g">/&gt;</span></div> </div>');
		shape_code = '<span class="g">&lt;?xml</span> <span class="r">version</span>=<span class="b">"1.0"</span> <span class="r">encoding</span>=<span class="b">"utf-8"</span><span class="g">?&gt;</span> <div class="code-shape"> <span class="g">&lt;shape</span><span class="r"> xmlns:android</span>=<span class="b">"http://schemas.android.com/apk/res/android"</span> <span class="r">android:shape</span>=<span class="b">"rectangle"</span> <span class="g">&gt;</span> ' + corner_code + " " + bg_code + " " + pad_code + " " + siz_code + " " + strok_code + ' <span class="g">&lt;/shape&gt;</span> ';
		$("#code_button").html(btn_code);
		$("#code_shape").html(shape_code)
	}

	function e(a) {
		var b = document;
		a = b.getElementById(a);
		if (b.body.createTextRange) b = document.body.createTextRange(), b.moveToElementText(a), b.select();
		else if (window.getSelection) {
			var c = window.getSelection(),
				b = document.createRange();
			b.selectNodeContents(a);
			c.removeAllRanges();
			c.addRange(b)
		}
	}
	var b = {
			btn_id: "@+id/angry_btn",
			btn_layout_width: "",
			btn_layout_height: "",
			btn_layout_margin: "",
			btn_gravity: "center",
			btn_background: "@drawable/buttonshape",
			btn_text: "Button",
			btn_textcolor: "FFFFFF",
			btn_textsize: "30",
			btn_shadowradius: "5",
			btn_shadowdx: "0",
			btn_shadowdy: "0",
			btn_shadowcolor: "A8A8A8",
			isshadow: !0
		},
		a = {
			shape: "rectangle",
			corners_radius: "14",
			corners_topleftradius: "0",
			corners_toprightradius: "0",
			corners_bottomleftradius: "0",
			corners_bottomrightradius: "0",
			gradient_angle: "45",
			gradient_centerx: "35",
			gradient_centery: "50",
			gradient_startcolor: "E8E8E8",
			gradient_centercolor: "7995A8",
			gradient_endcolor: "000000",
			gradient_gradientradius: "100",
			gradient_type: "linear",
			gradient_uselevel: "",
			padding_left: "0",
			padding_top: "0",
			padding_right: "0",
			padding_bottom: "0",
			size_width: "270",
			size_height: "60",
			solid_color: "4F4F4F",
			stroke_width: "3",
			stroke_color: "878787",
			stroke_dashWidth: "",
			stroke_dashGap: "",
			isradius: !1,
			bgtype: "gradient",
			iscenter: !0,
			ispadding: !0
		};
	$("#btn_textsize").iSlider({
		min: 8,
		max: 32
	});
	$("#btn_shadowdx").iSlider({
		min: -20,
		max: 20
	});
	$("#btn_shadowdy").iSlider({
		min: -20,
		max: 20
	});
	$("#btn_shadowradius").iSlider({
		min: 0,
		max: 25
	});
	$("#corners_radius").iSlider({
		min: 0,
		max: 100
	});
	$("#corners_topleftradius").iSlider({
		min: 0,
		max: 100
	});
	$("#corners_toprightradius").iSlider({
		min: 0,
		max: 100
	});
	$("#corners_bottomleftradius").iSlider({
		min: 0,
		max: 100
	});
	$("#corners_bottomrightradius").iSlider({
		min: 0,
		max: 100
	});
	$("#gradient_centerx").iSlider({
		min: 0,
		max: 100
	});
	$("#gradient_centery").iSlider({
		min: 0,
		max: 100
	});
	$("#gradient_angle").iCircleSlider();
	$("#gradient_gradientradius").iSlider({
		min: 0,
		max: 100
	});
	$("#padding_top").iSlider({
		min: 0,
		max: 100
	});
	$("#padding_right").iSlider({
		min: 0,
		max: 100
	});
	$("#padding_bottom").iSlider({
		min: 0,
		max: 100
	});
	$("#padding_left").iSlider({
		min: 0,
		max: 100
	});
	$("#size_width").iSlider({
		min: 100,
		max: 250
	});
	$("#size_height").iSlider({
		min: -50,
		max: 100
	});
	$("#stroke_width").iSlider({
		min: 0,
		max: 100
	});
	$(".btn_target").on("keyup", function() {
		b[this.id] = $(this).val();
		d(this.id)
	}).on("change", function() {
		b[this.id] = $(this).val();
		d(this.id)
	});
	$("#shadowchk").click(function() {
		b.isshadow ? (b.isshadow = !1, $(this).parent().parent().find("div.shadow span.lbl").css({
			color: "#888888"
		}), $("#shadowlbl").html("<b>Shadow Off</b>"), $(this).parent().parent().find("div.shadow input").attr("disabled", !0)) : (b.isshadow = !0, $(this).parent().parent().find("div.shadow span.lbl").css({
			color: "black"
		}), $("#shadowlbl").html("<b>Shadow On</b>"), $(this).parent().parent().find("div.shadow input").removeAttr("disabled"));
		d(this.id)
	});
	$(".shape_target").on("keyup", function() {
		a[this.id] = $(this).val();
		c(this.id)
	}).on("change", function() {
		a[this.id] = $(this).val();
		c(this.id)
	});
	$("#radiuschk").click(function() {
		a.isradius ? (a.isradius = !1, $(this).parent().parent().find("div.radius span.lbl").css({
			color: "#888888"
		}), $(this).parent().parent().find("div.radius input").attr("disabled", !0)) : (a.isradius = !0, $(this).parent().parent().find("div.radius span.lbl").css({
			color: "black"
		}), $(this).parent().parent().find("div.radius input").removeAttr("disabled"));
		c("corners_")
	});
	$("#paddingchk").click(function() {
		a.ispadding ? (a.ispadding = !1, $(this).parent().parent().find("div.padding span.lbl").css({
			color: "#888888"
		}), $("#paddinglbl").html("<b>Padding Off</b>"), $(this).parent().parent().find("div.padding input").attr("disabled", !0)) : (a.ispadding = !0, $(this).parent().parent().find("div.padding span.lbl").css({
			color: "black"
		}), $("#paddinglbl").html("<b>Padding On</b>"), $(this).parent().parent().find("div.padding input").removeAttr("disabled"));
		c("padding_")
	});
	$("#gradient_type").change(function() {
		"linear" == $(this).val() ? ($(".typeradial").hide(), $(".typelineer").show(), $("#gradient_centerx").removeAttr("disabled"), $("div.centerx span.lbl").css({
			color: "black"
		}), a.iscenter ? ($("div.centerx span.lbl").css({
			color: "black"
		}), $("#gradient_centerx").removeAttr("disabled"), $("#gradient_centercolor").removeAttr("disabled")) : ($("div.centerx span.lbl").css({
			color: "#888888"
		}), $("#gradient_centerx").attr("disabled", !0), $("#gradient_centercolor").attr("disabled", !0))) : ($(".typeradial").show(), $(".typelineer").hide(), $("#gradient_centerx").removeAttr("disabled"), $("div.centerx span.lbl").css({
			color: "black"
		}), a.iscenter ? ($("div.centercol span.lbl").css({
			color: "black"
		}), $("#gradient_centercolor").removeAttr("disabled")) : ($("div.centercol span.lbl").css({
			color: "#888888"
		}), $("#gradient_centercolor").attr("disabled", !0)));
		c("gradient_")
	});
	$("#centerchk").click(function() {
		type = $("#gradient_type").val();
		"linear" == type ? ($("#gradient_centerx").removeAttr("disabled"), $("div.centerx span.lbl").css({
			color: "black"
		}), a.iscenter ? (a.iscenter = !1, $("div.centerx span.lbl").css({
			color: "#888888"
		}), $("#gradient_centerx").attr("disabled", !0), $("#gradient_centercolor").attr("disabled", !0)) : (a.iscenter = !0, $("div.centerx span.lbl").css({
			color: "black"
		}), $("#gradient_centerx").removeAttr("disabled"), $("#gradient_centercolor").removeAttr("disabled"))) : ($("#gradient_centerx").removeAttr("disabled"), $("div.centerx span.lbl").css({
			color: "black"
		}), a.iscenter ? (a.iscenter = !1, $("div.centercol span.lbl").css({
			color: "#888888"
		}), $("#gradient_centercolor").attr("disabled", !0)) : (a.iscenter = !0, $("div.centercol span.lbl").css({
			color: "black"
		}), $("#gradient_centercolor").removeAttr("disabled")));
		c("gradient_")
	});
	$(".accordion-content div.tab span").click(function() {
		$(".accordion-content div.tab span").addClass("disable_tab");
		$(this).removeClass("disable_tab");
		tabn = $(this).html();
		$(this).parent().parent().find(".tabview").hide();
		$(".tab_" + tabn).show();
		a.bgtype = "gradient" == tabn ? "gradient" : "solid";
		c("gradient_")
	});
	$("#code_button").dblclick(function() {
		e("code_button")
	});
	$("#code_shape").dblclick(function() {
		e("code_shape")
	});
	$("#addjson").click(function() {
		k = JSON.stringify(a);
		$("#presetbtn").attr("data-shape", k)
	});
	$("#loadjson").click(function() {
		k = $("#presetbtn").data("shape")
	});
	$("#btn_text").val(b.btn_text);
	$("#btn_textcolor").val(b.btn_textcolor);
	$("#btn_textsize").val(b.btn_textsize);
	$("#shadowchk").prop("checked", b.isshadow);
	$("#btn_shadowcolor").val(b.btn_shadowcolor);
	$("#btn_shadowdx").val(b.btn_shadowdx);
	$("#btn_shadowdy").val(b.btn_shadowdy);
	$("#btn_shadowradius").val(b.btn_shadowradius);
	$("#size_width").val(a.size_width);
	$("#size_height").val(a.size_height);
	$("#corners_radius").val(a.corners_radius);
	$("#radiuschk").prop("checked", a.isradius);
	$("#corners_topleftradius").val(a.corners_topleftradius);
	$("#corners_toprightradius").val(a.corners_toprightradius);
	$("#corners_bottomleftradius").val(a.corners_bottomleftradius);
	$("#corners_bottomrightradius").val(a.corners_bottomrightradius);
	$("#centerchk").prop("checked", a.iscenter);
	$("#gradient_type").val(a.gradient_type);
	$("#gradient_centerx").val(a.gradient_centerx);
	$("#gradient_centery").val(a.gradient_centery);
	$("#gradient_startcolor").val(a.gradient_startcolor);
	$("#gradient_centercolor").val(a.gradient_centercolor);
	$("#gradient_endcolor").val(a.gradient_endcolor);
	$("#gradient_angle").val(a.gradient_angle);
	$("#gradient_gradientradius").val(a.gradient_gradientradius);
	$("#solid_color").val(a.solid_color);
	$("#paddingchk").prop("checked", a.ispadding);
	$("#padding_left").val(a.padding_left);
	$("#padding_top").val(a.padding_top);
	$("#padding_right").val(a.padding_right);
	$("#padding_bottom").val(a.padding_bottom);
	$("#stroke_width").val(a.stroke_width);
	$("#stroke_color").val(a.stroke_color);
	$("#preview").val(b.btn_text);
	$("#preview").css({
		color: "#" + b.btn_textcolor
	});
	$("#preview").css({
		"font-size": b.btn_textsize + "px"
	});
	b.isshadow ? ($("#preview").css({
		"text-shadow": b.btn_shadowdx + "px " + b.btn_shadowdy + "px " + b.btn_shadowradius + "px #" + b.btn_shadowcolor
	}), $("#shadowchk").parent().parent().find("div.shadow span.lbl").css({
		color: "black"
	}), $("#shadowlbl").html("<b>Shadow On</b>"), $("#shadowchk").parent().parent().find("div.shadow input").removeAttr("disabled")) : ($("#preview").css({
		"text-shadow": "none"
	}), $("#shadowchk").parent().parent().find("div.shadow span.lbl").css({
		color: "#888888"
	}), $("#shadowlbl").html("<b>Shadow Off</b>"), $("#shadowchk").parent().parent().find("div.shadow input").attr("disabled", !0));
	$("#preview").css({
		width: a.size_width + "px"
	});
	$("#preview").css({
		height: a.size_height + "px"
	});
	a.isradius ? ($("#preview").css({
		"border-top-left-radius": a.corners_topleftradius + "px"
	}), $("#preview").css({
		"border-top-right-radius": a.corners_toprightradius + "px"
	}), $("#preview").css({
		"border-bottom-left-radius": a.corners_bottomleftradius + "px"
	}), $("#preview").css({
		"border-bottom-right-radius": a.corners_bottomrightradius + "px"
	}), $("#radiuschk").parent().parent().find("div.radius span.lbl").css({
		color: "black"
	}), $("#radiuschk").parent().parent().find("div.radius input").removeAttr("disabled")) : ($("#preview").css({
		"border-radius": a.corners_radius + "px"
	}), $("#radiuschk").parent().parent().find("div.radius span.lbl").css({
		color: "#888888"
	}), $("#radiuschk").parent().parent().find("div.radius input").attr("disabled", !0));
	"gradient" == a.bgtype ? ("linear" == a.gradient_type ? ($(".typeradial").hide(), $(".typelineer").show(), $("#gradient_centerx").removeAttr("disabled"), $("div.centerx span.lbl").css({
		color: "black"
	}), a.iscenter ? (deg = 180 - (parseInt(a.gradient_angle) + 90), $("#preview").css({
		background: " linear-gradient(" + deg + "deg, #" + a.gradient_startcolor + " 0%, #" + a.gradient_centercolor + " 50%, #" + a.gradient_endcolor + " 100%)"
	}), $("div.centerx span.lbl").css({
		color: "black"
	}), $("#gradient_centerx").removeAttr("disabled"), $("#gradient_centercolor").removeAttr("disabled")) : ($("#preview").css({
		background: " linear-gradient(" + deg + "deg, #" + a.gradient_startcolor + " 0%, #" + a.gradient_endcolor + " 100%)"
	}), $("div.centerx span.lbl").css({
		color: "#888888"
	}), $("#gradient_centerx").attr("disabled", !0), $("#gradient_centercolor").attr("disabled", !0))) : "radial" == a.gradient_type && ($(".typeradial").show(), $(".typelineer").hide(), $("#gradient_centerx").removeAttr("disabled"), $("div.centerx span.lbl").css({
		color: "black"
	}), a.iscenter ? (midcolpos = a.gradient_gradientradius / 2, k = "radial-gradient(circle farthest-corner at " + a.gradient_centerx + "% " + a.gradient_centery + "%, #" + a.gradient_startcolor + " 0px, #" + a.gradient_centercolor + " " + midcolpos + "px, #" + a.gradient_endcolor + " " + a.gradient_gradientradius + "px) repeat scroll 0 0 transparent", $("#preview").css({
		background: k
	}), $("div.centercol span.lbl").css({
		color: "black"
	}), $("#gradient_centercolor").removeAttr("disabled")) : (k = "radial-gradient(circle farthest-corner at " + a.gradient_centerx + "% " + a.gradient_centery + "%, #" + a.gradient_startcolor + " 0px, #" + a.gradient_endcolor + " " + a.gradient_gradientradius + "px) repeat scroll 0 0 transparent", $("#preview").css({
		background: k
	}), $("div.centercol span.lbl").css({
		color: "#888888"
	}), $("#gradient_centercolor").attr("disabled", !0))), $(".accordion-content div.tab span").addClass("disable_tab"), $("#tab_gradient").removeClass("disable_tab"), $("#tab_gradient").parent().parent().find(".tabview").hide(), $(".tab_gradient").show()) : ($("#preview").css({
		background: "#" + a.solid_color
	}), $(".accordion-content div.tab span").addClass("disable_tab"), $("#tab_solid").removeClass("disable_tab"), $("#tab_solid").parent().parent().find(".tabview").hide(), $(".tab_solid").show());
	a.ispadding ? ($("#preview").css({
		padding: a.padding_top + "px " + a.padding_right + "px " + a.padding_bottom + "px " + a.padding_left + "px"
	}), $("#paddingchk").parent().parent().find("div.padding span.lbl").css({
		color: "black"
	}), $("#paddinglbl").html("<b>Padding On</b>"), $("#paddingchk").parent().parent().find("div.padding input").removeAttr("disabled")) : ($("#preview").css({
		padding: "0px"
	}), $("#paddingchk").parent().parent().find("div.padding span.lbl").css({
		color: "#888888"
	}), $("#paddinglbl").html("<b>Padding Off</b>"), $("#paddingchk").parent().parent().find("div.padding input").attr("disabled", !0));
	$("#preview").css({
		border: a.stroke_width + "px solid #" + a.stroke_color
	});
	f();
	$("#helpimg").html('<img src="./buttonhelp.png" width="980" style="border:1px solid black"/>')
});
$(document).ready(function() {
	$('.accordion-header').toggleClass('inactive-header');
	var contentwidth = $('.accordion-header').width();
	$('.accordion-content').css({
		'width': contentwidth
	});
	$('.accordion-header').click(function() {
		if ($(this).is('.inactive-header')) {
			$(this).toggleClass('active-header').toggleClass('inactive-header');
			$(this).next().slideToggle().toggleClass('open-content');
		} else {
			$(this).toggleClass('active-header').toggleClass('inactive-header');
			$(this).next().slideToggle().toggleClass('open-content');
		}
	});
	return false;
});